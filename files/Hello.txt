$ 					ID			1
23.23 					FC			2
. 					DOT			2
ab 					ID			2
; 					SEMICOL			2
23.23 					FC			3
.23 					FC			3
; 					SEMICOL			3
.23 					FC			4
; 					SEMICOL			4
23.243 					FC			5
; 					SEMICOL			5
92. 					ERR			6
ab8 					ID			6
; 					SEMICOL			6
math 					ID			7
. 					DOT			7
pi 					ID			7
( 					ORB			7
) 					CRB			7
; 					SEMICOL			7
a996 					ID			8
.76 					FC			8
.23asd 					ERR			8
.642b656 					ERR			8
. 					DOT			8
55b 					ERR			9
.bc 					ERR			9
. 					DOT			9
abc 					ID			9
95 					IC			10
{ 					OCB			10
9.76@ 					ERR			10
.556 					FC			10
. 					DOT			10
ad 					ID			10
. 					DOT			10
dh 					ID			10
. 					DOT			10
g 					ID			10
; 					SEMICOL			10
gk 					ID			10
a 					ID			11
. 					DOT			11
b55 					ID			11
. 					DOT			11
c 					ID			11
243. 					ERR			12
.43 					FC			12
$ 					ID			13
$ 					ID			16
'ab 					ERR			17
cs 					ID			17
; 					SEMICOL			17
'\a; 					ERR			18
'\\' 					CC			19
a 					ID			19
; 					SEMICOL			19
'\'' 					CC			20
a 					ID			20
.7 					FC			20
; 					SEMICOL			20
'a' 					CC			21
; 					SEMICOL			21
'"' 					ERR			22
; 					SEMICOL			22
'\\' 					CC			23
; 					SEMICOL			23
'\n' 					CC			24
; 					SEMICOL			24
'\'' 					CC			25
; 					SEMICOL			25
'\z' 					ERR			26
; 					SEMICOL			26
'sd 					ERR			27
'\\' 					CC			27
ad 					ID			27
'; 					ERR			27
'' 					ERR			28
} 					CCB			28
';r 					ERR			29
'; 					ERR			29
'\/' 					ERR			30
; 					SEMICOL			30
$ 					ID			31
$ 					ID			34
"" 					SC			35
; 					SEMICOL			35
"ABDS" 					SC			36
; 					SEMICOL			36
"ABDS 					ERR			37
"\"a 					ERR			38
"A\"" 					SC			39
; 					SEMICOL			39
"\  Q" 					ERR			40
; 					SEMICOL			40
"A" 					SC			40
; 					SEMICOL			40
"\n/n" 					SC			41
; 					SEMICOL			41
"\r\z\a\n\\\"|%^&&" 					ERR			42
; 					SEMICOL			42
$ 					ID			43
$ 					ID			46
if 					IF			47
( 					ORB			47
word 					ID			47
<= 					COMP			47
"" 					SC			47
) 					CRB			47
; 					SEMICOL			47
"" 					SC			48
!= 					COMP			48
; 					SEMICOL			48
== 					COMP			49
"" 					SC			49
; 					SEMICOL			49
9 					IC			50
>= 					COMP			50
9 					IC			50
; 					SEMICOL			50
$ 					ID			51
$ 					ID			54
string 					DT			55
word 					ID			55
= 					ASIGN			55
'\'' 					CC			55
; 					SEMICOL			55
if 					IF			56
( 					ORB			56
word 					ID			56
<= 					COMP			56
"" 					SC			56
) 					CRB			56
{ 					OCB			56
} 					CCB			57
char 					ID			58
ch 					ID			58
; 					SEMICOL			58
int 					ID			59
i 					ID			59
; 					SEMICOL			59
bool 					DT			60
flag 					ID			60
= 					ASIGN			60
false 					ID			60
; 					SEMICOL			60
$ 					ID			61
$ 					ID			65
Child_Of 					ID			66
A_B_C 					ID			66
; 					SEMICOL			66
; 					SEMICOL			66
a 					ID			66
+ 					PM			66
b 					ID			66
- 					PM			66
55 					IC			66
{ 					OCB			66
while 					WHILE			67
( 					ORB			67
a 					ID			67
<= 					COMP			67
= 					ASIGN			67
b 					ID			67
+ 					PM			67
+ 					PM			67
+ 					PM			67
5&& 					ERR			67
) 					CRB			67
) 					CRB			67
if 					IF			68
else 					ELSE			68
( 					ORB			68
a 					ID			68
< 					COMP			68
>= 					COMP			68
! 					NOT			68
+ 					PM			68
= 					ASIGN			68
56 					IC			68
int 					ID			69
ch 					ID			69
= 					ASIGN			69
"abc" 					SC			69
+ 					PM			69
= 					ASIGN			69
; 					SEMICOL			69
53 					IC			69
- 					PM			69
7 					IC			69
",d 					ERR			69
return 					RETURN			70
a 					ID			70
- 					PM			70
b 					ID			70
+ 					PM			70
\\56 					ERR			70
- 					PM			70
abc 					ID			70
ch 					ID			71
= 					ASIGN			71
b 					ID			71
+ 					PM			71
c 					ID			71
char 					ID			72
'a' 					CC			72
= 					ASIGN			72
'\a\' 					ERR			72
+ 					PM			72
; 					SEMICOL			72
} 					CCB			73
$ 					ID			74
func 					ID			78
main 					ID			78
( 					ORB			78
) 					CRB			78
{ 					OCB			78
Solution 					ID			79
var 					ID			79
= 					ASIGN			79
create 					ID			79
Solution 					ID			79
( 					ORB			79
) 					CRB			79
; 					SEMICOL			79
int 					ID			80
ans 					ID			80
= 					ASIGN			80
var 					ID			80
. 					DOT			80
arithmeticTriplets 					ID			80
( 					ORB			80
{ 					OCB			80
1 					IC			80
, 					COM			80
2 					IC			80
, 					COM			80
4 					IC			80
, 					COM			80
5 					IC			80
} 					CCB			80
, 					COM			80
- 					PM			80
2 					IC			80
) 					CRB			80
; 					SEMICOL			80
print 					ID			81
( 					ORB			81
ans 					ID			81
) 					CRB			81
; 					SEMICOL			81
} 					CCB			82
class 					CLASS			84
Solution 					ID			84
{ 					OCB			84
global 					ID			85
int 					ID			85
arithmeticTriplets 					ID			85
( 					ORB			85
int 					ID			85
[ 					OSB			85
] 					CRB			85
arr 					ID			85
, 					COM			85
int 					ID			85
diff 					ID			85
) 					CRB			85
{ 					OCB			85
Map 					ID			86
< 					COMP			86
Integer 					ID			86
, 					COM			86
Integer 					ID			86
> 					COMP			86
map 					ID			86
= 					ASIGN			86
create 					ID			86
HashMap 					ID			86
< 					COMP			86
> 					COMP			86
( 					ORB			86
) 					CRB			86
; 					SEMICOL			86
int 					ID			87
n 					ID			87
= 					ASIGN			87
arr 					ID			87
. 					DOT			87
length 					ID			87
; 					SEMICOL			87
for 					FOR			88
( 					ORB			88
int 					ID			88
i 					ID			88
= 					ASIGN			88
0 					IC			88
; 					SEMICOL			88
i 					ID			88
< 					COMP			88
n 					ID			88
; 					SEMICOL			88
i 					ID			88
= 					ASIGN			88
i 					ID			88
+ 					PM			88
1 					IC			88
) 					CRB			88
{ 					OCB			88
map 					ID			89
. 					DOT			89
put 					ID			89
( 					ORB			89
arr 					ID			89
[ 					OSB			89
i 					ID			89
] 					CRB			89
, 					COM			89
i 					ID			89
) 					CRB			89
; 					SEMICOL			89
} 					CCB			90
int 					ID			91
ans 					ID			91
= 					ASIGN			91
0 					IC			91
; 					SEMICOL			91
for 					FOR			92
( 					ORB			92
int 					ID			92
i 					ID			92
= 					ASIGN			92
0 					IC			92
; 					SEMICOL			92
i 					ID			92
< 					COMP			92
n 					ID			92
; 					SEMICOL			92
i 					ID			92
= 					ASIGN			92
i 					ID			92
+ 					PM			92
1 					IC			92
) 					CRB			92
{ 					OCB			92
int 					ID			93
num 					DT			93
= 					ASIGN			93
arr 					ID			93
[ 					OSB			93
i 					ID			93
] 					CRB			93
; 					SEMICOL			93
int 					ID			94
ind 					ID			94
= 					ASIGN			94
map 					ID			94
. 					DOT			94
get 					ID			94
( 					ORB			94
num 					DT			94
) 					CRB			94
; 					SEMICOL			94
if 					IF			95
( 					ORB			95
map 					ID			95
. 					DOT			95
get 					ID			95
( 					ORB			95
num 					DT			95
- 					PM			95
diff 					ID			95
) 					CRB			95
!= 					COMP			95
null 					NULL			95
and 					ID			95
map 					ID			95
. 					DOT			95
get 					ID			95
( 					ORB			95
num 					DT			95
+ 					PM			95
diff 					ID			95
) 					CRB			95
!= 					COMP			95
null 					NULL			95
) 					CRB			95
{ 					OCB			95
ans 					ID			96
= 					ASIGN			96
ans 					ID			96
= 					ASIGN			96
ans 					ID			96
; 					SEMICOL			96
} 					CCB			97
} 					CCB			98
return 					RETURN			99
ans 					ID			99
; 					SEMICOL			99
} 					CCB			101
} 					CCB			102
